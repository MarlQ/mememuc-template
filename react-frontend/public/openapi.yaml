openapi: 3.0.0
info:
  title: Meme Generator API
  description: API for generating and managing memes
  version: 1.0.0
servers:
  - url: http://localhost:3001
paths:
  /memes:
    get:
      summary: Get a list of memes as JSON data
      tags:
        - Memes
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/creator'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meme'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /memes/download:
    get:
      summary: Download a ZIP file of memes (including metadata)
      tags:
        - Memes
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/creator'
        - $ref: '#/components/parameters/skip'
      responses:
        '200':
          description: OK
          content:
            application/zip:
              schema:
                type: string
                format: binary
  /templates:
    get:
      summary: Get a list of all templates
      description: Returns a list of all available templates
      tags:
        - Templates
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
  /user/memes:
    get:
      summary: Get a list of the user's memes
      description: Returns a list of the memes created by the authenticated user
      tags:
        - User
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meme'
        '401':
          description: Unauthorized
  /user/account:
    get:
      summary: Get the user's account information
      description: Returns the account information for the authenticated user
      tags:
        - User
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
  /user/templates:
    get:
      summary: Get a list of the user's templates
      description: Returns a list of the templates created by the authenticated user
      tags:
        - User
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
        '401':
          description: Unauthorized
components:
  parameters:
    sort:
      name: sort
      in: query
      description: Sort order for the memes
      schema:
        type: string
        enum: [random, newest, oldest]
        default: random
    id:
      name: id
      in: query
      description: PublicID of the meme to retrieve
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: Maximum number of memes to retrieve
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 100
    creator:
      name: creator
      in: query
      description: Username of the creator of the memes to retrieve
      schema:
        type: string
    skip:
      name: skip
      in: query
      description: Number of memes to skip before returning results
      schema:
        type: integer
        default: 0
        minimum: 0
  schemas:
    Meme:
      type: object
      properties:
        name:
          type: string
          required: true
        creator:
          type: string
          required: true
          description: The user who created the meme
        visibility:
          type: string
          enum: [private, unlisted, public]
          default: 'public'
        image:
          type: string
          format: binary
          required: true
          description: The image buffer (can not be retrieved directly)
        publicId:
          type: string
          required: true
          unique: true
          description: The unique ID of the meme
        contentType:
          type: string
          default: 'image/png'
        createdAt:
          type: string
          format: date-time
        url:
          type: string
          description: The resource URL of the image contained in the meme
      required:
        - name
        - creator
        - image
        - publicId
      x-model: Meme 
